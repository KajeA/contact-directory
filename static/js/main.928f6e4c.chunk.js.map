{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","contact","id","name","phone","email","CardList","contacts","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredContacts","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,aAAaC,IAAI,UAAUC,IAAG,mCAAiD,EAAnBH,EAAMI,QAAQC,GAA5C,UAC7C,6BAAKL,EAAMI,QAAQE,OACnB,oBAAIL,UAAU,cACd,4BAAID,EAAMI,QAAQG,QAClB,oBAAIN,UAAU,eACd,4BAAID,EAAMI,QAAQI,YCNTC,G,MAAW,SAAAT,GAAK,OAC3B,qBAAKC,UAAU,YAAf,SACGD,EAAMU,SAASC,KAAI,SAAAP,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJZO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC+BCG,G,wDAjCb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAEDkB,MAAQ,CACXR,SAAU,GACVS,YAAa,IALE,E,qDASnB,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAM,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,oBAG9C,WAAU,IAAD,OACP,EAAkCE,KAAKR,MAA/BR,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,YACZQ,EAAmBjB,EAASkB,QAAO,SAAAxB,GAAO,OAC9CA,EAAQE,KAAKuB,cAAcC,SAASX,EAAYU,kBAElD,OACE,sBAAK5B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CACEY,YAAY,YACZC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAE1D,cAAC,EAAD,CAAUvB,SAAUiB,W,GA5BVO,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.928f6e4c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n  <div className='card-container'>\r\n    <img className=\"card-image\" alt=\"contact\" src={`https://picsum.photos/id/${props.contact.id * 7}/200`} />\r\n    <h2>{props.contact.name}</h2>\r\n    <hr className=\"horilines\"/>\r\n    <p>{props.contact.phone}</p>\r\n    <hr className=\"horilines2\"/>\r\n    <p>{props.contact.email}</p>\r\n  </div>\r\n)","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = props => (\r\n  <div className='card-list'>\r\n    {props.contacts.map(contact => (\r\n      <Card key={contact.id} contact={contact}/>\r\n    ))}\r\n  </div>\r\n);","import React from \"react\";\r\nimport \"./search-box.styles.css\"\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <input\r\n    className=\"search\"\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n)","import React, { Component } from 'react';\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      contacts: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then( users => this.setState({ contacts: users }));\n  }\n\n  render() {\n    const { contacts, searchField } = this.state;\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <h1>Contact Directory</h1>\n        <SearchBox\n          placeholder=\"Search...\"\n          handleChange={e => this.setState({searchField: e.target.value})}\n        />\n        <CardList contacts={filteredContacts} />\n      </div>\n    );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}